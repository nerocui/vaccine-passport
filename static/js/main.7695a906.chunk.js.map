{"version":3,"sources":["components/info-card.jsx","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","border","borderRadius","InfoCard","code","useState","patient","setPatient","firstShot","setFirstShot","secondShot","setSecondShot","useEffect","decode","then","res","entries","payload","vc","credentialSubject","fhirBundle","entry","patients","filter","e","resource","resourceType","length","shots","sort","a","b","Date","occurrenceDateTime","catch","err","console","log","CardContent","Typography","sx","fontSize","color","variant","component","name","given","map","family","birthDate","Divider","style","borderColor","lotNumber","performer","p","actor","display","status","className","QrScanner","WORKER_PATH","QrScannerWorkerPath","Input","App","existingFile","localStorage","getItem","isFlipped","setIsFlipped","img","setImg","errorString","setErrorString","setCode","reader","useMemo","FileReader","onload","scanImage","result","resCode","startsWith","setItem","onFileChange","useCallback","event","readAsDataURL","target","files","undefined","onDelete","confirm","removeItem","onFlip","onRetry","id","htmlFor","onChange","accept","type","Button","onClick","flipDirection","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7695a906.chunk.js","sourcesContent":["import { Typography, CardContent, Divider } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { styled } from '@mui/material/styles';\r\nimport decode from \"shc-protocol\";\r\n\r\nconst Container = styled('div')({\r\n    border: '1px solid grey',\r\n    borderRadius: '1rem',\r\n});\r\n\r\nexport const InfoCard = ({ code }) => {\r\n    const [patient, setPatient] = useState();\r\n    const [firstShot, setFirstShot] = useState();\r\n    const [secondShot, setSecondShot] = useState();\r\n    \r\n    useEffect(() => {\r\n        if(!!code) {\r\n          decode(code)\r\n            .then(res => {\r\n                const entries = res.payload.vc.credentialSubject.fhirBundle.entry;\r\n                if (!!entries) {\r\n                    const patients = entries.filter(e => e.resource.resourceType === 'Patient');\r\n                    if (patients && patients.length > 0) {\r\n                        setPatient(patients[0]);\r\n                    }\r\n                    const shots = entries\r\n                        .filter(e => e.resource.resourceType === 'Immunization')\r\n                        .sort((a, b) => new Date(a.resource.occurrenceDateTime) - new Date(b.resource.occurrenceDateTime));\r\n                    if (shots && shots.length > 0) {\r\n                        setFirstShot(shots[0]);\r\n                        if (shots.length > 1) {\r\n                            setSecondShot(shots[1]);\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => console.log('Failed to decode QR Code'));\r\n        }\r\n      }, [code, setPatient, setFirstShot, setSecondShot])\r\n\r\n    if (!code) {\r\n        return <Container>Failed to scan the QR code</Container>;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <CardContent>\r\n                <Typography sx={{ fontSize: 14 }} color='text.grey'>\r\n                    Name\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"p\">\r\n                    {`${patient?.resource?.name[0]?.given.map(name => `${name} `)} ${patient?.resource?.name[0]?.family}`}\r\n                </Typography>\r\n                <Typography sx={{ fontSize: 14 }}>\r\n                    Birthday\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"p\">\r\n                    {patient?.resource?.birthDate}\r\n                </Typography>\r\n\r\n                <Divider style={{ borderColor: 'grey' }}/>\r\n\r\n                <Typography sx={{ fontSize: 18 }}>\r\n                    First Shot\r\n                </Typography>\r\n                <Typography sx={{ fontSize: 14 }}>\r\n                    Date\r\n                </Typography>\r\n                <Typography variant=\"h7\" component=\"p\">\r\n                    {firstShot?.resource?.occurrenceDateTime}\r\n                </Typography>\r\n                <Typography sx={{ fontSize: 14 }}>\r\n                    Lot Number\r\n                </Typography>\r\n                <Typography variant=\"h7\" component=\"p\">\r\n                    {firstShot?.resource?.lotNumber}\r\n                </Typography>\r\n                <Typography sx={{ fontSize: 14 }}>\r\n                    Taken By\r\n                </Typography>\r\n                <Typography variant=\"h7\" component=\"p\">\r\n                    {firstShot?.resource?.performer.map(p => `${p.actor.display},`)}\r\n                </Typography>\r\n                <Typography sx={{ fontSize: 14 }}>\r\n                    Status\r\n                </Typography>\r\n                <Typography variant=\"h7\" component=\"p\">\r\n                    {firstShot?.resource?.status}\r\n                </Typography>\r\n\r\n                <Divider style={{ borderColor: 'grey' }}/>\r\n\r\n                <Typography sx={{ fontSize: 18 }}>\r\n                    Second Shot\r\n                </Typography>\r\n                <Typography sx={{ fontSize: 14 }}>\r\n                    Date\r\n                </Typography>\r\n                <Typography variant=\"h7\" component=\"p\">\r\n                    {secondShot?.resource?.occurrenceDateTime}\r\n                </Typography>\r\n                <Typography sx={{ fontSize: 14 }}>\r\n                    Lot Number\r\n                </Typography>\r\n                <Typography variant=\"h7\" component=\"p\">\r\n                    {secondShot?.resource?.lotNumber}\r\n                </Typography>\r\n                <Typography sx={{ fontSize: 14 }}>\r\n                    Taken By\r\n                </Typography>\r\n                <Typography variant=\"h7\" component=\"p\">\r\n                    {secondShot?.resource?.performer.map(p => `${p.actor.display},`)}\r\n                </Typography>\r\n                <Typography sx={{ fontSize: 14 }}>\r\n                    Status\r\n                </Typography>\r\n                <Typography variant=\"h7\" component=\"p\">\r\n                    {secondShot?.resource?.status}\r\n                </Typography>\r\n            </CardContent>\r\n            <div className='bar'/>\r\n        </Container>\r\n    );\r\n}\r\n\r\n","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport QrScanner from 'qr-scanner';\r\n\r\nimport './App.css';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport QrScannerWorkerPath from '!!file-loader!../node_modules/qr-scanner/qr-scanner-worker.min';\r\nimport { InfoCard } from './components/info-card';\r\n\r\nQrScanner.WORKER_PATH = QrScannerWorkerPath;\r\n\r\nconst Input = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nconst App = () => {\r\n  const existingFile = localStorage.getItem('imagePath');\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n  const [img, setImg] = useState(existingFile);\r\n  const [errorString, setErrorString] = useState();\r\n  const [code, setCode] = useState();\r\n  const reader = useMemo(() => {\r\n    const res = new FileReader();\r\n    res.onload = function() {\r\n      QrScanner.scanImage(res.result)\r\n        .then(resCode => {\r\n          if (resCode.startsWith('shc:')) {\r\n            setImg(res.result);\r\n            setCode(resCode);\r\n            localStorage.setItem('imagePath', res.result);\r\n          } else {\r\n            setErrorString('Invalid QR Code');\r\n          }\r\n        })\r\n        .catch(err => setErrorString('Invalid QR Code'));\r\n    };\r\n    return res;\r\n  }, [setImg, setErrorString]);\r\n\r\n  const onFileChange = useCallback((event) => {\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    setErrorString(undefined);\r\n  }, [reader, setErrorString]);\r\n\r\n  const onDelete = useCallback(() => {\r\n    if (!!img) {\r\n      // eslint-disable-next-line no-restricted-globals\r\n      let conf = confirm('Remove your Vaccine Card?');\r\n      if (conf) {\r\n        setImg(undefined);\r\n        setCode(undefined);\r\n        setErrorString(undefined);\r\n\t\t    setIsFlipped(false);\r\n        localStorage.removeItem('imagePath');\r\n      }\r\n    }\r\n  }, [img, setImg, setCode, setErrorString, setIsFlipped]);\r\n\r\n  const onFlip = useCallback(() => {\r\n    setIsFlipped(!isFlipped);\r\n  }, [isFlipped, setIsFlipped]);\r\n\r\n  const onRetry = useCallback(() => {\r\n    if (!!img && !code) {\r\n      QrScanner.scanImage(img)\r\n        .then(resCode => {\r\n          if (resCode.startsWith('shc:')) {\r\n            setCode(resCode);\r\n          } else {\r\n            setCode(undefined);\r\n          }\r\n        })\r\n        .catch(err => setErrorString('Invalid QR Code'))\r\n\t  }\r\n  }, [img, code, setCode, setErrorString])\r\n\r\n  useEffect(() => {\r\n\t  onRetry();\r\n  }, [onRetry]);\r\n\r\n  return (\r\n    <div id='app'>\r\n      \t<h1 id='app-title'>Vaccine Passport</h1>\r\n\t\t{!img && \r\n\t\t<label\r\n\t\t\tclassName='center'\r\n\t\t\thtmlFor=\"contained-button-file\">\r\n\t\t\t<Input onChange={onFileChange} accept=\"image/*\" id=\"contained-button-file\" type=\"file\" />\r\n\t\t\t<Button variant=\"contained\" component=\"span\">\r\n\t\t\t  Open\r\n\t\t\t</Button>\r\n\t\t</label>}\r\n\t\t{!!errorString && \r\n      <div>\r\n        <p className='bottom' style={{ color: 'red' }}>\r\n          {errorString}\r\n        </p>\r\n        <Button onClick={onRetry} variant='contained'>Retry</Button>\r\n      </div>\r\n    }\r\n\t\t{(!!img && !errorString) && \r\n\t\t\t<div\r\n\t\t\t\tid='flipper'\r\n\t\t\t\tclassName='center'>\r\n\t\t\t\t<ReactCardFlip \r\n\t\t\t\t\tisFlipped={isFlipped} \r\n\t\t\t\t\tflipDirection='horizontal'>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={onFlip}\r\n\t\t\t\t\t\tclassName='flipper-container'>\r\n\t\t\t\t\t\t<img src={img} alt='covid vaccine qr code'/>\r\n\t\t\t\t\t</div>\r\n          <div\r\n\t\t\t\t\t\tonClick={onFlip}\r\n\t\t\t\t\t\tclassName='flipper-container'>\r\n\t\t\t\t\t  <InfoCard code={code} onClick={onFlip}/>\r\n          </div>\r\n\t\t\t\t</ReactCardFlip>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t}\r\n\t\t{(!!img && !errorString) &&\r\n\t\t\t<Button\r\n\t\t\t\tid='delete'\r\n\t\t\t\tvariant='contained'\r\n\t\t\t\tcolor='error'\r\n\t\t\t\tonClick={onDelete}>\r\n\t\t\t\tDelete\r\n\t\t\t</Button>\r\n\t\t}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}