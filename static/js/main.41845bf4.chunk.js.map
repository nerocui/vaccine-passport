{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["QrScanner","WORKER_PATH","QrScannerWorkerPath","Input","styled","display","App","existingFile","localStorage","getItem","useState","img","setImg","errorString","setErrorString","reader","useMemo","res","FileReader","onload","scanImage","result","then","code","startsWith","setItem","catch","err","onFileChange","useCallback","event","readAsDataURL","target","files","undefined","onDelete","confirm","removeItem","Stack","margin","height","alignItems","justifyContent","padding","htmlFor","onChange","accept","id","type","Button","variant","component","style","color","spacing","src","alt","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QASAA,IAAUC,YAAcC,IAExB,IAAMC,EAAQC,YAAO,QAAPA,CAAgB,CAC5BC,QAAS,SAoEIC,EAjEH,WACV,IAAMC,EAAeC,aAAaC,QAAQ,aAD1B,EAEMC,mBAASH,GAFf,mBAETI,EAFS,KAEJC,EAFI,OAGsBF,qBAHtB,mBAGTG,EAHS,KAGIC,EAHJ,KAIVC,EAASC,mBAAQ,WACrB,IAAMC,EAAM,IAAIC,WAahB,OAZAD,EAAIE,OAAS,WACXnB,IAAUoB,UAAUH,EAAII,QACrBC,MAAK,SAAAC,GACAA,EAAKC,WAAW,SAClBZ,EAAOK,EAAII,QACXb,aAAaiB,QAAQ,YAAaR,EAAII,SAEtCP,EAAe,sBAGlBY,OAAM,SAAAC,GAAG,OAAIb,EAAe,uBAE1BG,IACN,CAACL,EAAQE,IAENc,EAAeC,uBAAY,SAACC,GAChCf,EAAOgB,cAAcD,EAAME,OAAOC,MAAM,IACxCnB,OAAeoB,KACd,CAACnB,EAAQD,IAENqB,EAAWN,uBAAY,WACrBlB,IAEOyB,QAAQ,+BAEjBxB,OAAOsB,GACP1B,aAAa6B,WAAW,iBAG3B,CAAC1B,EAAKC,IAET,OACE,eAAC0B,EAAA,EAAD,CAAOC,OAAO,IAAIC,OAAO,OAAOC,WAAW,SAASC,eAAe,gBAAnE,UACE,kDACA,eAACJ,EAAA,EAAD,CAAOK,QAAQ,OAAOD,eAAe,SAArC,WACI/B,GACF,wBAAOiC,QAAQ,wBAAf,UACE,cAACzC,EAAD,CAAO0C,SAAUjB,EAAckB,OAAO,UAAUC,GAAG,wBAAwBC,KAAK,SAChF,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,UAAU,OAAtC,uBAIF,mBAAGC,MAAO,CAAEC,MAAO,OAAnB,SAA6BxC,MAC1BF,GACD,eAAC2B,EAAA,EAAD,CAAOgB,QAAQ,OAAf,UACE,qBAAKC,IAAK5C,EAAK6C,IAAI,0BACnB,cAACP,EAAA,EAAD,CACEC,QAAQ,YACRG,MAAM,QACNI,QAAStB,EAHX,8BCvDGuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.41845bf4.chunk.js","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { styled } from '@mui/material/styles';\r\nimport QrScanner from 'qr-scanner';\r\nimport './App.css';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport QrScannerWorkerPath from '!!file-loader!../node_modules/qr-scanner/qr-scanner-worker.min';\r\n\r\nQrScanner.WORKER_PATH = QrScannerWorkerPath;\r\n\r\nconst Input = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nconst App = () => {\r\n  const existingFile = localStorage.getItem('imagePath');\r\n  const [img, setImg] = useState(existingFile);\r\n  const [errorString, setErrorString] = useState();\r\n  const reader = useMemo(() => {\r\n    const res = new FileReader();\r\n    res.onload = function() {\r\n      QrScanner.scanImage(res.result)\r\n        .then(code => {\r\n          if (code.startsWith('shc:')) {\r\n            setImg(res.result);\r\n            localStorage.setItem('imagePath', res.result);\r\n          } else {\r\n            setErrorString('Invalid QR Code');\r\n          }\r\n        })\r\n        .catch(err => setErrorString('Invalid QR Code'));\r\n    };\r\n    return res;\r\n  }, [setImg, setErrorString]);\r\n\r\n  const onFileChange = useCallback((event) => {\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    setErrorString(undefined);\r\n  }, [reader, setErrorString]);\r\n\r\n  const onDelete = useCallback(() => {\r\n    if (!!img) {\r\n      // eslint-disable-next-line no-restricted-globals\r\n      let conf = confirm('Remove your Vaccine Card?');\r\n      if (conf) {\r\n        setImg(undefined);\r\n        localStorage.removeItem('imagePath');\r\n      }\r\n    }\r\n  }, [img, setImg]);\r\n\r\n  return (\r\n    <Stack margin='0' height='100%' alignItems='center' justifyContent='space-between'>\r\n      <h1>Vaccine Passport</h1>\r\n      <Stack padding='1rem' justifyContent='center'>\r\n        {!img && \r\n        <label htmlFor=\"contained-button-file\">\r\n          <Input onChange={onFileChange} accept=\"image/*\" id=\"contained-button-file\" type=\"file\" />\r\n          <Button variant=\"contained\" component=\"span\">\r\n            Upload\r\n          </Button>\r\n        </label>}\r\n        <p style={{ color: 'red' }}>{errorString}</p>\r\n        {!!img && \r\n          <Stack spacing='1rem'>\r\n            <img src={img} alt='covid vaccine qr code'/>\r\n            <Button\r\n              variant='contained'\r\n              color='error'\r\n              onClick={onDelete}>\r\n              Delete\r\n            </Button>\r\n          </Stack>\r\n        }\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}