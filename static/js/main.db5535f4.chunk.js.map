{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Input","styled","display","App","existingFile","useMemo","localStorage","getItem","useState","img","setImg","reader","res","FileReader","onload","result","setItem","onFileChange","useCallback","event","readAsDataURL","target","files","Stack","paddingTop","height","alignItems","textAlign","justifyContent","paddingX","marginBottom","justifySelf","htmlFor","onChange","accept","id","multiple","type","Button","variant","component","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAMMA,EAAQC,YAAO,QAAPA,CAAgB,CAC5BC,QAAS,SAsCIC,EAnCH,WACV,IAAMC,EAAeC,mBAAQ,WAC3B,OAAOC,aAAaC,QAAQ,eAC3B,IAHa,EAIMC,mBAASJ,GAJf,mBAITK,EAJS,KAIJC,EAJI,KAKVC,EAASN,mBAAQ,WACrB,IAAMO,EAAM,IAAIC,WAKhB,OAJAD,EAAIE,OAAS,WACXJ,EAAOE,EAAIG,QACXT,aAAaU,QAAQ,YAAaJ,EAAIG,SAEjCH,IACN,CAACF,IACEO,EAAeC,uBAAY,SAACC,GAChCR,EAAOS,cAAcD,EAAME,OAAOC,MAAM,MACvC,CAACX,IAEJ,OACE,eAACY,EAAA,EAAD,CAAOC,WAAW,OAAOC,OAAO,OAAOC,WAAW,SAASC,UAAU,MAAMC,eAAe,gBAA1F,UACE,kDACA,eAACL,EAAA,EAAD,CAAOM,SAAS,OAAOC,aAAa,OAAOF,eAAe,SAASG,YAAY,SAA/E,WACItB,GACF,wBAAOuB,QAAQ,wBAAf,UACE,cAAChC,EAAD,CAAOiC,SAAUhB,EAAciB,OAAO,UAAUC,GAAG,wBAAwBC,UAAQ,EAACC,KAAK,SACzF,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,UAAU,OAAtC,yBAIC/B,GAAO,qBAAKgC,IAAKhC,EAAKiC,IAAI,iCC1BtBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.db5535f4.chunk.js","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { styled } from '@mui/material/styles';\r\nimport './App.css';\r\n\r\nconst Input = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nconst App = () => {\r\n  const existingFile = useMemo(() => {\r\n    return localStorage.getItem('imagePath');\r\n  }, []);\r\n  const [img, setImg] = useState(existingFile);\r\n  const reader = useMemo(() => {\r\n    const res = new FileReader();\r\n    res.onload = function() {\r\n      setImg(res.result);\r\n      localStorage.setItem('imagePath', res.result);\r\n    };\r\n    return res;\r\n  }, [setImg]);\r\n  const onFileChange = useCallback((event) => {\r\n    reader.readAsDataURL(event.target.files[0]);\r\n  }, [reader]);\r\n\r\n  return (\r\n    <Stack paddingTop='2rem' height='100%' alignItems='center' textAlign='end' justifyContent='space-between'>\r\n      <h1>Vaccine Passport</h1>\r\n      <Stack paddingX='1rem' marginBottom='8rem' justifyContent='center' justifySelf='center'>\r\n        {!img && \r\n        <label htmlFor=\"contained-button-file\">\r\n          <Input onChange={onFileChange} accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" />\r\n          <Button variant=\"contained\" component=\"span\">\r\n            Upload\r\n          </Button>\r\n        </label>}\r\n        {!!img && <img src={img} alt='covid vaccine qr code'/>}\r\n      </Stack>\r\n    </Stack>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}